= Facets History

== 2.5.3 / 2009-07-03

Facets 2.5.3 fixes an arity bug with Module#extend --one of the
very few actual core overrides in Facets. It also removes htmlfilter.rb
and cssfilter.rb due to a licensing incompatability. These scripts
are now available as a separate pacakge called 'htmlfilter'.

* 2 Major Enhancements

    * Removed htmlfilter.rb due to licensing issues.
    * Also removed cssfilter.rb ('gem install htmlfilter' now)

* 1 Minor Enhancements

    * Removed Kernel#__HERE__ as it simply cannot work.
      (Ruby 1.9.2 will offer #source_location for the same,, btw.)

* 1 Bug Fixes

    * Fixed arity issue with Module#extend.


== 2.5.2 / 2009-04-07

Facets 2.5.2 is a simple maintentance release.

* 1 Major Enhancement

    * added string/uppercase and lowercase

* 1 Minor Enhancement

    * adjustemnts to to_hash.rb


== 2.5.1 / 2009-03-05

Facets 2.5.1 fixes a few bugs, makes some small but nice additions
and improves 1.9 compatibility.

The most important addition to make note of is Object#extend, which has
been overridden to allow a block parameter. This is one of only two or three
actual "monkey patches" in all of Facets. The block, when provided,
is used to create an annonymous module which then extends the reciever.
This is a "good practice" way to extend objects, rather than using class_eval
on the singleton class.

Special thanks to Erik Veenstra, Pit Capitan and especially Sandor Sz√ºcs
for their contributions to this release.

* 7 Major Enhancements

    * added Hash#group_by_value (thanks to Erik Veenstra)
    * added String#file
    * added Hash#new_with (Pit Capitan)
    * added module/extend.rb, now can take a block.
    * added hook.rb
    * added to_h_auto
    * overhauled to_hash.rb, now has multiple methods

* 10 Bug Fixes

    * corrected ostruct.rb to test for frozen state on updates
    * fixed String#left_align
    * fixed conflict between test_name.rb and test_arguments.rb
    * fixed Enumreable#split when reciever is empty array
    * fixed coruption of reciever by Hash#collate (thanks to Tilo Sloboda)
    * fixed Array#to_h, h={} was not initialized
    * fixed test of Module#conflict according ruby19
    * fixed Hash#dearray_singluar_values
    * association.rb stores reference when using #new
    * changed Array#product to make it compatible to ruby 19, deleted block parameter

* 5 Minor Enhancements

    * split enumerable/collect into map_with_index and compact_map
    * improved Array#to_h for 1.9 using flatten(1)
    * Dictionary#replace can take regular Hash too
    * move test_to_hash.rb from more to core
    * Doc'd that UnboundMethod#name returns Symbol in 1.9, but String in 1.8


== 2.5.0 / 2008-11-23

Facets 2.5.0 is an important milestone in the development of Facets.

This release has been tested against Rails' ActiveSupport library.
As long as Facets is loaded after ActiveSupport, everything
should work fine. Of course, there's no counting for real world
trials, but all ActiveSupport testcases pass under this scenario.

Secondly, this release is the first of two (or three) down-scaling
releases intended to remove all the remaining "excess" from the
library. This is being done for a variety of reasons. Some scripts
are substantial enough to be one their own and have been spun-off
into separate largely compatible projects. In this release:

  If you were using...   Use this project instead...

    annotations.rb         Anise

    bytes.rb               RichUnits
    times.rb

    command.rb             Clio
    consoleutils.rb

A few others scripts have been deprecated, without an alternative
recourse, simply because they were too weak, such as  uploadutils.rb,
or highly experimental, such as chain.rb and eventhook.rb.

Although this release constitutes an over all slimming down of Facets,
two excellent new libraries have been added.

1) *ini.rb* by Jeena Paradies. While YAML is frequently used by
Rubyists for configuration files, a full-on serializer like YAML
is often overkill. INI files provide a lightweight solution
specifically geared for configuration.

2) *filter.rb* by Brian Candler offers lazy evaluation chains of 
Enumerable methods. This is an elegant way to optimize contiguous
maps, selections, etc. --effective even on infinite enumerators.
(Note, the name of this library may be changed in the next release.)

While work remains to be done, I am happy to say, Facets is 
finally beginning to approach the level of solidity I set out to
achieve just over a year ago. Thank the Maker!

Special thanks to Brian Candler, Jeena Paradies and Tyler Rick.

* 9 Major Changes

    * added Brian Candler's Enumerator::Filter
    * added sparse_array.rb (was old harray.rb)
    * added Jeena Paradies' ini.rb
    * renamed CacheDelegator to Memoizer
    * renamed DictionaryMatcher to just Matcher
    * deprecated bytes.rb and times.rb (use RichUnits instead)
    * deprecated uploadutils.rb; ziputils.rb will be (use Folio)
    * deprecated annotations.rb (use Anise instead)
    * deprecated command.rb and consoleutils.rb (use Clio instead)

* 5 Minor Changes

    * deprecated chain.rb (very expiremental)
    * deprecated eventhook.rb (moved to ToadCode project)
    * deprecated tagiter.rb (moved to ToadCode project)
    * moved Hash#symolize_keys and #stringify_keys to core lib
      (still recommend #rekey instead though)
    * switched to git as of 2.4.5

* 4 Bug Fixes

    * memoize.rb, cache was at class-level, now at instance-level
    * binding/caller.rb, fixed require for callstack.rb
    * fixed missing require in string/tabto.rb
    * Fixed some bugs with Time#ago/Time#hence not changing years
      correctly when you changed months.
      (For example, Time.utc(2008, 1, 1).ago(12, :months) incorrectly
      returned 2009-01-01 instead of 2007-01-01.)
      Changed Time#ago/Time#hence to still work if passed negative number.


== 2.4.5 / 2008-10-02

Facets 2.4.5 is a maintaince release. This release is notable however in that
it will likely be the last that to use SVN. Facets will be switching to Git.
Also, some libraries that have been flagged "to be deprecated" for some time will
finally be so.

* 8 Major Enhancements

    * Re-added date.rb to lore library, and removed from core.  (#r1014)
    * Much improved date.rb extension now in Lore library.  (#r1027)
    * Deprecated kernel/suppress. Use Exception.suppress from now on.  (#r1040)
    * Deprecated string/style.rb. Use English project instead.  (#r1074)
    * Console namespace is no longer supported (for Ansicode).  (#r1077)
    * enumerable/mode.rb, Enumerable#mode returns array since there can be more than one.  (#r1079)
    * OpenCascade automatically creates nodes, use foo? to query.  (#r1056)
    * Change #index_of to #index which now takes a block.

* 14 Minor Enhancements

    * OpenStruct.new can now take a default block, like Hash.new.
    * Moved variablize methods out of metaid.rb and into separate files (string/ and symbol/).  (#r1042)
    * Added Time#advance.  (#r1046)
    * Speed up of Integer odd/even methods.  (#r1057)
    * Array#index now takes a block (this is a core override).  (#r1059)
    * Spilt file/write.rb into separate method files (append, create, writelines).  (#r1073)
    * Modified Enumerable#split to behave like String#split.  (#r1076)
    * hash/op.rb, split into separate method files.  (#r1081)
    * Added string/modulize. string/methodize handles path names now too.  (#r1085)
    * Class#cattr is now part of core.  (#r1089)
    * Modified Enumerable#split to behave like String#split.  [minor]
    * Removed Rope class. If anything this will have a separate project.
    * Added doc/news.html and doc/authors.html to website (temporarily?).
    * Added zlib.rb to Lore library.

* 7 Bug Fixes

    * OpenStruct#to_h dups internal table.  (#r1015)
    * Fixed require of string/xor in bicrypt.rb.  (#r1039)
    * integer/odd.rb, fixed Ruby 1.9 condition.  (#r1080)
    * class/cattr_*.rb fix require bug
    * opencascade.rb, fixed bug when accessing sub-hash.
    * typecast.rb, fixed require for string/methodize.
    * Fixed Pathname#glob to ensure use of ::File.


== 2.4.4 / 2008-09-01

Facets 2.4.4 includes a major bug fix that caused Facets not to load properly,
having to do with a Time extension. The problem has been fixed. In addition,
this release put Facets only a few pending adjustments away from full
Rails/ActiveSupport compatibility.

* 10 Major Enhancements

    * Added string/mask providing powerful string manipulation.  (#997)
    * BasicObject is now just a synonm for BlankSlate unless Ruby 1.9.  (#1000)
    * Added Symbol#plain?, Symbol#query? and Symbol#setter?  (#1011)
    * Removed Time#to_date. 
      * Due to clobberd RI Docs (!) this should have been in Lore lib date.rb
      * Moved to Lore date.rb. (#1012)
    * Re-added date.rb to lore library, and removed from core.  (#1014)
    * Much improved date.rb extension now in Lore library.  (#1027)
    * Deprecated kernel/suppress. Use Exception.suppress from now on.  (#1040)
    * Improved date.rb and moved to LORE library, and removed from CORE.  [major]
    * Deprecated kernel/suppress. Use Exception.suppress from now on.  [major]
    * Deprecated String#to_time.
      * This method reqiures the loading of a number of other standard libs.
      * We can reconsider adding it again if we decide these other libs should be core.
      * Or if we find a more suitable way to define the method.

* 17 Minor Enhancements

    * Moved style.rb to string/stylize.rb  (#998)
    * Renamed string/subtract to string/op_sub. 
      Old name will remain for time being for compatability. (#1002)
    * Module#instance_method_define? now only applies to public methods.  (#1003)
    * Array#index accepts a block (one of the few core overrides).  (#1004)
    * Moved Hash#<< from hash/update.rb to hash/op_push.rb  (#1005)
    * Add facets class files (eg. facets/string) have been made dynamic.  (#1013)
    * Moved variablize methods out of metaid.rb and into separate files (string/ and symbol/).  (#1042)
    * Added Time#advance.  (#1046)
    * Added qua_class.rb. Yea. It really is my favorite.
    * Added simple functional test that loads all of Facets.
    * Added a benchmark for measuring how fast Facets loads. (Core < 1sec!)
    * Made Module#alias_method_chain a public method (for better Rails support).
    * Wrapped Nilclass#to_f in 1.9 condition.
    * float/round.rb redirects to numeric/round.rb.
    * numeric/float.rb holds rounding methods for all classed Numeric, Integer and Float.
    * Replaced Kernel#instance_exec with Mauricio's version.
    * Improved String#each_char to work like Ruby 1.9.
      * This loads strscan.rb.
      * It is wrapped in a 1.9 condition.

* 8 Bug Fixes

    * Hash#<< now returns self  (#1001)
    * OpenStruct#to_h dups internal table.  (#1015)
    * Fixed require of string/xor in bicrypt.rb.  (#1039)
    * Fixed facets.rb to use relative paths.
    * Fixed cgi.rb (CGI is a class not a module).
    * OpenStruct#to_h dups internal table.  [bug]
    * Fixed require of string/xor in bicrypt.rb.  [bug]
    * date.rb (stamp) fixed ref to constant FORMAT.


== 2.4.3 / 2008-08-14

Facets is almost fully interoperable with ActiveSupport and Ruby 1.9.
We will continue to improve this interoperability in upcoming releases.

As a REMINDER, Facets 2.4+ now encourages:

  require 'facets'

This is better than cherry-picking methods. It may seem counter-intuitive,
but it actually proves more advantageous to do this for the sake of
improved interoperability. The practice of cherry-picking can become 
problematic if other dependent libraries have cherry-picked different
methods. In those cases these distinctions go unaccounted and untested.

Note that this release does not include a setup.rb script. We are working
on a new version of this script, which we plan to include in the next release.

This release give special thanks to the following people for their contributions:

* Ken Bloom
* Nick Caruso
* Evgeniy Dolzhenko
* Andy Freeman
* Tomasz Muras
* Dave Myron

And of course, to anyone else I failed to mention that has contributed.

* 12 Major Enhancements

    * Changed File#rewrite to not use the in-place change of the string.
    * Deprecate Hash#keys_to_s and Hash#keys_to_sym.
    * Renamed Class#to_pathname and #to_methodname to #pathize and #methodize.
    * Deprecated Console:: namespace for ANSICode.
    * Added Time#trunc and Time#round to Core.
    * Added Ken Bloom's DictionaryMatcher class (will be renamed in future version)
    * Added Array#recursively and fixed bug in Hash#recursively.
    * Added kernel/instance method which provides a fluent interface to private object space.
    * Moved Mentalguy's lazy.rb to core!
    * Added Indexable and Stackable to core.
    * Deprecated ruby.rb, which was a sort 1.9 compatibility layer.
    * The ruby.rb methods were moved to core, wrapped in a 1.9 condition.

* 7 Minor Enhancements

    * Fixed Time#hence changed years when changing months.
    * Fixed Time#hence to flip year correctly when adding months.
    * Added optional argument to Dictionary#first and #last.
    * Improved File#rootname --it is now more robust.
    * Made FileUtils#whereis a module_function again.
    * Although not perceptible to the end user, there are now three divisions lib/core, lib/lore, lib/more.
    * Created Lore library to house extensions to Ruby's standard library.
    * Add facets class files (eg. facets/string) have been made dynamic.  [minor]

* Unclassified Enhancements

    * Added Symbol#plain?, Symbol#query? and Symbol#setter?  [major]
    * Move admin/sow to admin/share.
    * Moved old changelogs to archive.
    * Added a log/archive.
    * Fixed tests for BasicObject and Hash#slice.
    * Added admin/share dirctory.
    * Moved Hash#<< from hash/update.rb to hash/op_push.rb  [minor]
    * Array#index accepts a block (one of the few core overrides).  [minor]
    * Module#instance_method_define? now only applies to public methods.  [minor]
    * Renamed string/subtract to string/op_sub. 
      Old name will remain for time being for compatability. [minor]
    * Hash#<< now return self  [bug]
    * BasicObject is now just a synonm for BlankSlate unless Ruby 1.9.  [major]
    * Added #glob and #glob_first as extensions to Pathname.
    * Moved style.rb to string/stylize.rb  [minor]
    * Added string/mask providing powerful string manipulation.  [major]
    * Added warning to bytes --use RichUnits instead.
    * Added Jim Weirich's BlankSlate class.
      * This is a temporary measure be compatible w/ AcitveSupport's BasicObject.
    * Added block to Array#index.
      * This is one of the few core overrides in Facets.
      * It is a feature already in Ruby 1.9.
    * Added niclass/ergo whic points back to kernel/ergo.
    * Added reap and sow to admin/.
    * Made core/facets/hash.rb dynamic.
    * Renamed arguments.rb and CLI::Arguments to argvector.rb and Argvector.*
    * Added #bump method to VersionNumber class.*
    * Updated warn line fore eventual deprecation of fileshell and arguments.*
    * Added facets-load.rb to allow old school cherry picking.*
      * Between 2.0 and 2.4 require 'facets' simply added core to LOAD_PATH.
      * Starting with 2.4 it loads all of core automatically instead.
      * facets-load.rb provides a way to use the old behavior.
            require 'facets-load.rb
            require 'kernel/with'
            require 'symbol/to_proc'
      * It adds the path to the end of LOAD_PATH to prevent any load conflicts.
    * Added file/split_root.*
    * Made module/alias_method_chain and alias_accessor separate files.*
    * Split module/alias.rb up into alias_accessor, alias_module_function and alias_method_chain.
    * Renamed Instantise to Instantize.
    * Modified script/test to display $LOAD_PATH before running tests.
    * Fixed dir tests to require 'fileutils'.
    * Upped version to 2.4.3.
    * Updated NEWS and CHANGES.
    * Moved Indexable and Stackable to core.
    * Update news and added svn entry to reap.yaml.
    * Fixed string/pathize.
    * Move test_partial to more tests.
    * Split out Enumerable#probability tests, etc.
    * Split tests for String#words, etc.
    * Remove module/test_clone.
    * Modified website copyright notice section.
    * Split out String #word_wrap, #words and #each_word.
    * Split out enumerable methods probability, commonality, entropy and frequency.
    * Remove more/facets/module --there's nothing in it.
    * Worked through core lib breaking up a few remaining large method bunches.
    * Added module directory to more lib, as well as hash/symbolize_keys and stringify_keys.
    * Split revise.rb up into separate methods.
    * Split kernel/load.rb into require_all.rb and require_local.rb.
    * Deprecate Hash#keys_to_s and Hash#keys_to_sym.
      * These are the original versions of these methods.
      * But now we can use #rekey(:to_s) and #rekey(:to_sym) instead.
    * Added had directory to more library.
    * Renamed Class#to_pathname and #to_methodname to #pathize and #methodize.
    * Moved binding/opvars from core to more.
    * Added a binding directory to more lib.
    * Deprecated Console:: namespace for ANSICode.


== 2.4.2 / 2008-08-12

* Major Enhancements

    * Added Ken Bloom's DictionaryMatcher class from Ruby Quiz #103.
      (Note this class will probably be renamed in the future.)
    * Changed File#rewrite to not use the in-place change of the string.
      * If you were using the function, change your code to use File#rewrite! instead.
      * Or, modify your code to use the new behavior.
      * This change can make for a slippery bug, so be sure to check for it!
    * Moved live.rb to facets-live.rb.
    * Added kernel/instance method which provides a fluent interface to private object space.

* Minor Enhancements

    * Added sow generation forms.
    * Spilt Time#trunc into separate file.
    * Remove old log files --shouldn't version control these.
    * Added note to FileList to add glob options parameter.
    * Added optional argument to Dictionary#first and #last.


        * Move "lore" tests to test/lore (lore are extensions to Ruby's standard lib).
        * Moved test-old core test to test/core.
        * Added test/core, test/lore and test/more.
        * Added new test directory.
        * Temporarily move test to test-old.
        * Added time/test_round.rb
        * Updated user scripts.
        * Updated reap configuration.
        * Updated test to correspond with previous changs.
        * Adjusted require path for facets.rb.
        * Added array/recursively.
        * Added time/round.
        * Time#to_date makes the public (it already existed in Ruby!)
        * Fixed Time#hence to flip year correctly when adding months.
        * Split hash/recurisve_merge out from hash/recursively.
        * Moved facets.rb to core/.


2008-08-09  transami


        * Work on documentation using new Sow system.
        * Moved meta.rb to more/kernel/meta.rb and merged facets/core.rb into facets.rb.
        * Added more/kernel directory --hey not every extension can be core.
        * Adjusted loadpath and moved lazy.rb to core!
        * Moved remaing files to subdirectory locations.
        * Moved most core libs to core/.
        * Move most more files to the more directory.
        * Added lore and more directories.
        * Added facets/core directory. Yes, I'm spiliting the lib again.
          * Loadpath will be used, so user inteface will stay the same.
          * Setup.rb will be adjusted to recognaize loadpath.

        * Removed Rope class. If anything this will have a separate project.


2008-08-08  transami

        * Update metadata and added admin/config to repository.


2008-08-07  transami

        * Removed work directory.
        * Finished moving old work content to depot.
        * Move work/old to depot/deprecated.
        * Moved work/ref to depot/reference.
        * Moved work/new and work/sandbox to depot.
        * Added depot to admin directory to store odd files.
          * This used to be calle work/.
          * Is used to store scrap code, reference code, etc.
        * Moved setup.rb to script/setup.
          * This will either be replaced with configure/install scripts.
          * Or, depend on a separate ruby setup.rb project.
        * Metadata modifications.


2008-08-06  transami

        * Moved work to admin.
        * Added recorder.rb to consider in work directory.
        * Moved site to admin.
        * Moved log/ to admin/.
        * Update to testlog and changelog.
        * Added admin directory.
        * Added doc/news to store archives of part release notes.
        * Added website images.
        * Added test for paramix.rb.
        * Updated website with cleaner look.
        * Added "TO BE DEPRECATED" message to ruby.rb.
        * Added all methods from ruby.rb as individual core methods.
          * These are the methods that overlap with 1.9.
          * They are encased in 'unless RUBY_VERSION' caluses.

        * Imporved file/rootname --now much more robust.
        * Added Kernel#to_yamlfrag to yaml.rb as way to output yaml w/o the "---" header.
          * Perhaps not the most robust solution, but okay for now.
          * Maybe a poor name for the method, but you got a better one?


2008-06-11  tylerrick

        * Made FileUtils#whereis a module_function again like it used to be. Because:
          (1) that seems to be the way most other FileUtils methods are (cd, mkdir, cp, ...) and the most obvious way that users would WANT to use FileUtils: FileUtils.whereis("ruby"). 
          (3) I see module_function used in other comparible parts of Facets: UploadUtils, ConsoleUtils, ZipUtils, FileUtils#safe_ln, ...
          (3) My code that relied on the old module_function behavior was breaking
          What were you thinkin changing it?? ;)



== 2.4.1 / 2008-04-03

* 5 Changes

    * Comparing to ActiveSupport, found 63 extension clashes, but most are due to 1.9 features and the rest should be compatible.
    * A much improved paramix.rb has been returned to the library; but please note it's not quite finished yet.
    * Reatomized a number of Kernel and String methods. Reatomization is nearly complete.
    * Deprecated behavior.rb. It was not robust.
    * Added basex.rb, library for working in any encoding base using any character set (base62 is the default).

* Other Changes

    * Paramix is all spiffy again.
      * There a no longer capitialize module methods at all.
      * Use Module#[] and mixin_params[] instead.

    * Update to notes and changes.
    * Added doc/notes.rdoc
    * Renamed.
    * Update metadata for 2.4.1.
    * Added new logs.
    * Removed old logs.
    * Removed old xml changelogs.
    * Added .rsync-filter and .htaccess to site/.
    * Fixed methods and conflicts scripts to compare extension libraries.
    * Updated tests for reatomizations.
    * Continued work on reatomizing core extensions (nearly complete now).
    * Work on kernel instance methods.
    * Added basex.rb and deprecated bahavior.rb.


== 2.4.0 / 2008-03-24

Facets 2.4 is a major step forward for Facets. It is perhaps
the release that 2.0 should have been, but of course it took
the actual 2.0 release to make 2.4 possible. Some annoyances
you may have encountered in updating your code to 2.0 are now
fixed. And from 2.4 on, Facets will now be settling down into
simple refinement release cycles.

The main change under the hood is to bring everything up to
the top lib/facets/ directory. No longer are the libraries
sorted by category. I had done so for a long time to make
it easier to track the various libs, but in the end it was
only making it more diffcult to deal with build tools and 
packaging.

For the end-user, the largest change is a new emphisis on:

  require 'facets'

This is better than cherry-picking methods. It may seem counter-
intuitive, but it actually proves more advantantages to do this
for the sake of interoperability than the practice of cherry-picking.
The reason is simply because others may have cherry-picked different
methods, and those distinctions go unaccounted and untested.

Also with this release, to bolster the use of require 'facets',
some lack-luster extensions have been deprecated and namespace usage
has been improved. In addition, we are getting very close to full
ActiveSupport, and Ruby 1.9, interoperability. Expect this
to be complete in the next minor release or two.

* Enhancements

    * String#to_re and String#to_rx have swapped default behaviors. #to_rx escapes, #to_re does not.
    * The Console namespace is being deprecated. command.rb and arguments.rb now use CLI naemspace.
    * #compare_on and #equate_on are now "mixin methods" Comparable() and Equateable().
    * Enumerable#product, #combintations and #permutations have change to be Ruby 1.9 compatible.
    * thread.rb, map_send, et al, block is passed to send instead of yielding on result.
    * namespace.rb has been renamed to methodspace.rb.
    * Ruby 1.9 defined a new Proc#curry method, so Facets version has been made compatible.
    * The old curry method is now called #partial, as in "partial application".
    * Deprecated interface.rb. Perhaps a better approach but nonetheless extraneous.
    * Deprecated paramix.rb. A better way is to use a capitialized methods. (Perhaps a lib for that?)
    * Brought back a few web related libs, htmlfilter.rb and cssfilter.rb in particular.
    * camelcase and snakecase are core extensions. For specialized styles use String#style in style.rb.
    * This was a fairly large and fast-paced update, so unfortunately not all changes are listed this time.


2008-03-24  transami

        * Updated website a little.
        * Split off some time tests.
        * Updated logs.
        * Update CHANGES and NOTES.
        * Fixed minor bugs to pass tests.
        * Split up include.rb.
        * Split up include.rb.
        * Moved test/test_one_nine.rb to test/test_ruby.rb.
        * Removed use of Console namepspace. command.rb and arguments.rb now use CLI.
        * Renamed ArgVector to CLI::Arguments
        * Removed rdoc script (will replace in future).
        * Added ri generation to setup.rb.
        * Added site/doc soft link to doc/html.
        * Moved one_nine.rb to ruby.rb
        * Update d requires for "one_nine" to just "ruby" b/c of backports to 1.8.7.
        * Added some work files.
        * Added some expirments in "safe" extensions.
        * Added html docs.
        * Added tests.
        * Added amazon books.
        * Add some addition separation to extensions.
        * Renamed task/ to script/, since the community is used to it b/c of Rails.
        * Fixed up tasks.
        * Clean up task system and docs.
        * Update metadata.
        * Test updates.
        * Minor updates.


2008-03-22  transami

        * Update annotations for to_hash.rb.
        * Added headers to docs.
        * Updated docs.


2008-03-16  transami

        * Added the new split-off tests.
        * Splinter remaining clumped tests.
        * Removed test_array.
        * Splintered array tests.
        * Added some finer-grain to core method.
        * Some deprecated libs added to work/old.
        * Tests are now to th epoint of passing again. Yea!


2008-03-15  transami

        * Continued touching up tests.
        * Moved some old tests to proper place in work/old.
        * Deprecated files moved to work/old.
        * Coninuted work on tests.


2008-03-14  transami

        * Adjusted module tests.
        * Removed cli directory.
        * Removed prime test directory and moved cli test up a level.
        * Adjust test to match lib (again).
        * Some deprecated extensions place in work/old for possible future reference.


2008-03-12  transami

        * Umph... there it is.
        * Removed prime directory.
        * Make way for class extensions.
        * Added warning to Rick Kilmers's unit system.
          * Moving Rich Kilmers's units system to it's own package.
          * Three are alternate unit systems available and Facets should work with any of them.
          * Will keep a fair amount of the Time extensions though.


2008-03-10  transami

        * Move core method decisions (I sware there are only a few more!)
        * Moved cli libs to toplevel. Added a few methods to prime library.
        * And so on...


2008-03-08  transami

        * Cleandup symbol and class extra extensions.
        * Moved nil/status.rb to nilstatus.rb
        * Got rid of Method#curry and Method#partial since they just convert to Procs.
        * Divied prime methods to sepearate files after all.


2008-03-07  transami

        * General cleanup pushing toward 3.0 release.
        * Finished the reorganization of Enumerable extensions.
        * Loose end additions.
        * Cleanup module tests.
        * Cleanup hash tests.
        * Cleanup enumerable tests.
        * Added new test/kernel directory.
        * Removed old test/kernel directory.
        * Moved test_let to prime/kernel in order to move prime/kernel.
        * Cleanup array and time tests.
        * Cleanup file tests.
        * Cleanup string tests.
        * Continued test cleanup. Oh, so, fun fun ;)
        * Removed uneeded test directories.
        * Continued organizing tests.
        * Move integer tests cleanup.
        * Cleaned up integer tests.
        * Continued fixing tests.
        * Working on test organization.
        * Cleaned up binding tests.
        * Removed old core/more test directories.
        * Moved remaining tests to top test directory.
        * MOved extra extension test to toplevel.
        * Again moved more files to top level.
        * MOved more test to toplevel.
        * Moved remaining core test to top test level.
        * Moved ext/core to prime/.
          * Will not combine the per-method tests for the moment.
          * Will save that for later (unless we decide to div prime again :p)
        * Fixed requires for prime/ directory.
        * Moved all "prime" libs to subdir (yes, like they were).
        * Cleaned up remaining extranerous files.


2008-03-06  transami

        * Further touchups to website.
        * Added some extra pages to website.
        * OVerhaul website for version 3.


2008-03-05  transami

        * Made op_esc.rb a separate module rather thanan extension.
        * REmoved more extraneous files and moved a few to work area.


2008-03-04  transami

        * Added some tasks and a couple of file to work old.
        * Cleaned up extra binding extensions.
        * Continued considations (almost there).
        * Continued consolidation and removing extraneous files.
        * Deprecated with_reader, with_writer and with_accessor for attr_singleton_reader, &c.
        * Removed extraneous Enumerable files.


2008-03-03  transami

        * Removed extraneous module alias and attr files.
        * Deprecated Hash#pairs_at. Use Hash#slice instead from core.
        * Removed extraneous kernel extension files.
        * Removed extraneous String extextion files.
        * Removed some work folders.
        * Partial adjustments for work area dure to organization changes.
        * Scrap code.
        * Removed vestiges of transfers to core extensions and consolidations.
        * Fixed require in core libraries.
        * Fixed the namespaces of some extensions.
        * It is finished!
        * Move all "prime" libs to top.
        * Removed extra/.
        * Moved extra/continuation to top.
        * Move the rest of extra directories.
        * Moved all "extra" extensions to top facets/ directory.
        * Few more.
        * Added some file that were added before in the transition.


2008-03-02  transami

        * Removed remains vestigaes of old organization. (Now just to fix the new one!)
        * The big wadoozy.
        * Remove empty directories for more/ext.
        * Move add classes and module to facets/.
        * Move more extensions to facets/extra.
        * Move a few more/ext to prime.
        * Moved core/facets to facets/extra.
        * Removed empty ext directories.
        * Added prime directory and files.
        * Removed some dir methods that are now in prime.
        * Remove some now empty directories from core/ext, due to the "prime" transfer.
        * Removed all "prime" extension files.
        * Move mattr to module.


2008-03-01  transami

        * Fixed require bug in time methods.
        * Reverted memomize.rb back to original code --will come back to later.
        * Moved random.rb to sys/.
        * Added stylizer.rb to replace stylize.rb
        * Removed old stylize.rb library --see new stylizer.rb.
        * Array #recursively is not only called #traverse.
        * Added case/stylize methods to more/facets/string.
        * Renamed more/string/facets/titlecase to capitalize_all.


2008-02-29  transami

        * Added uri and xoxo tests.
        * Cleaning up more/ext tests.
        * Some more reorganization in test/core.
        * Removed finaly vestage of old dir structure.
        * Moved remaing test to more/add.
        * Removed some outdated test and organized.
        * Moved more/ext tests out of more/add/.
        * Added ext, cli and sys to test/more/.
        * Removed test/mixin.
        * Moved test from mixin to more/add.
        * Moved add to test/more.
        * Added test/more.
        * Moved test/more to add.
        * Moved ext tests to core subdir.
        * Added test/core.
        * Move text/core to test/ext.
        * Updated .roll file for new organization.
        * Updated .reap file.
        * Updated metadata to fit new organization. (Happy Days!)
        * Moved facets.rb up a level.
        * Temporarily moved console libs to cli --mainly to ease working on them.
        * Moved condole to add.
        * Moved system to more/sys.
        * Moved "lore" to add/. Yea!
        * Moved libs to ext.
        * Added more/ext directory.
        * Progressive work on memoize and elementor.
        * Moved systematic libs from ext/ to sys/.
        * Moved classes and modules from ext/ to add/.
        * Added facets directory to add/ directory.
        * dded add/ directory to core/.
        * Moved facets/ to ext/.
        * Added ext directory.
        * Minor doc change.
        * Functor no longer privatizes =, == and =~.
        * Minor doc fix.
        * Properly split conversion.rb.
        * Some string methods extracted from stylize.rb.


2008-02-28  transami

        * Continued structuring.
        * Moved lore/console up a notch.
        * Moved lore/system up a notch.
        * Moved random.rb to more/.
        * Renamed namespace.eb to methodspace.rb.
        * Moved autoreload to more/facets/kernel.
        * Moved four remaing web libs to common directory (use web/ subdir?).


2008-02-26  transami

        * Moved some modules from system to common.
        * Moved all mixins back in with classes.
        * Moved class/facets up a level.
        * Removed old curry.rb.
        * More as standard and extraneous core extensions is progressing.
        * Added enumerable directory to more.
        * Moved some libs from system to more.
        * Added string directory to more.
        * Added kernel directory to more extensions.
        * Recreated more to house standard extensions.
        * More as standard extensions, and Lore (?) for the rest.
        * Added some web related libraries.


2008-02-25  transami

        * Added cgi.rb with some standard extensions.
        * Fixed bug with #peek in stackable.
        * Deprecated paramix.rb.


2008-02-24  transami

        * Added xmlhash.rb and returned uri.rb extensions to the library.
        * Moved getoptlong/rb to standard extensions folder.
        * Added #method_name to Date class.


2008-02-22  transami

        * Removed extraneous level in doc.
        * REmove cut-bases AOP, now in it's own library.
        * Converted compare_on.rb to Paramtric Mixins.


2008-02-21  transami

        * Split fileutils up into individual methods.
        * Update metadata to reflect organization changes.
        * Moved standard library extensions to more/extend.
        * Added facets directory to more/extend.
        * Continued organization.
        * Moved console related libs to more/console.
        * Added facets subdir to console.
        * Added more/console; trying something a bit different in organization.
        * Added more/class/facets/net and moved set and ostruct to class as well.
        * more/system, rather than systems.
        * Moved class, mixin, and system to more.
        * Added new more directory.
        * Moved more to systems.


2008-02-20  transami

        * Added test for command.rb.


2008-02-19  transami

        * Renamed console.rb to whate it should be consoleutils.rb.
        * Update to command.rb integrating MasterCommand and Command into a single class.
          * The Console::Command is not nice and simple command parser I've been aiming torward.
          * Barring some major oversite, this class will not change in an incompatible way ever again.
          * Basic tests pass. More eleborate test will follow to ensure more complex designs also work.


2008-02-18  transami

        * Added doc directory.
        * Updated README and allowed doc/ to be included in package.
        * Added site/rdoc, which is a symlink.
        * Added log/Changelog.txt too.
        * Update logs. (Should these even be under version control?)
        * Added Rakefile to redirect to task/*.
        * Fixed bug in Kernel#object_hexid.
        * Fixed test for hash/collate.
        * Added test task and temporary rdoc task.
        * Added options back into multiglob_r.
        * Fixed bug in multiglob_r so it will NOT follow symlinks.
        * Moved work/reference to work/ref.
        * Moved work/current to new (can you tell I have a new naming scheme for work/?)
        * Moved work/outdated to old.
        * Added some outdated tasks to work. Will eventually delete.


2008-02-11  transami

        * Moved doc/ to site/.
        * Added remaining doc files.
        * Converted website to XML.


2008-02-09  transami

        * Automated learn and quick doc menus.
        * Convert website from html to xml.
        * Finishing touches for next release.
        * Saved old rdoc script.


2008-02-06  transami

        * Updates to tests as embedded tests are no more.
        * Finally completed removal of all embedded tests.
        * Organized tests according to new lib organization.
        * Improved cloneable.rb to be a true deep dup/clone mixin using Ken Bloom's suggestion.


2008-02-05  transami

        * Working on end-user tasks.
        * Added work/outdated/task.
        * Updated the way rdocs are generated.
        * Organized all libs between core, more, class and mixin.
        * Moved class libraries to lib/class/facets.
        * Added lib/class.
        * Added tasksystem.rb.
        * Remove some admin task files no longer needed thanks to Reap.
        * Move admin/ to work/outdated. We'll be using reap instead.
        * Moved meta/facets.roll to .roll.
          * This is related to an update of Rolls...
          * It's better to have good SOC here regardless of some metadata redundancy.
        * Added meta/authors.
        * Moved old changelogs to log/ and move meta/config.yaml to .reap per new reap design.
        * Updaed reap config and removed icli.yaml.
        * Added doc/ads directory.
        * Removed dev/ directory.
        * Moved remaining dev files to work/ (will cleanup later).
        * Moved dev/sandbox to work/.
        * Moved dev/task and reference material to work directory.
        * Moved outdated dev libs to work.
        * Moved current dev to work directory.
        * Update to admin/tasks.
        * Update to project file.
        * Added enumerable/combinations.
        * Added openhash and tracepoint.
        * Added work directory.
        * Added some development scraps, plan to move dev/ to work/.



== 2.3.0 / 2008-02-01

Amoung other changes with this release, cloneable.rb is
now a true deep dup/clone mixin; tracepoint.rb returns
to the library.

    * Reorganized library into smaller groups: core, more, class and mixin.
    * Added tracepoint.rb back to the library.
    * Fixed multiglob_r bug, so it will NOT follow symlinks.

2008-01-19  transami

        * Remove admin/log.
        * Convert changelog to pure ruby.
        * Remove admin/svn subdir.
        * Organize admin tasks better.
        * Add admin tasks.
        * Moved admin tasks to admin directory.
        * Added admin directory.
        * Removed task/doc subdir.
        * Moved some tasks.
        * Convert tasks to pure ruby.


2008-01-16  transami

        * Move test/unit to test/core.
        * Moved remaining more test to test/more.
        * Added test/more/hash directory.
        * Moved more tests to test/more directory.
        * Added test/more.
        * Fixed test_keyize.rb.
        * binding/test_cflow renamed to test_caller


2008-01-09  transami

        * Added test for new hash/collate.
        * Added demo benchmarks.
        * Update publish task.
        * Update quick.html and wiki code.
        * Added TODO to toplevel.
        * Added a couple of missing binding requires to repo.
        * Moved More lib hash_keyize.rb to hash/keyize.rb.


2007-12-29  transami

        * Move source_material to just source.


2007-12-27  transami

        * ANd so it goes with work reorganization.
        * Moved dev/play to dev/sandbox.
        * Further reorganiztion of work area.
        * Some reorganization of developemnt area.


== 2.2.1 / 2007-12-22

(2.2.1) This release get rid of the underlying methods subdir.
All method redirects are now in core, to ensure
there are no more name clashes.

    * Got rid of methods subdir. All method redirects are in core/.

2007-12-22  transami

        * Moved doc/wiki to apiwiki b/c of Rubyforge's wiki.
        * Removed doc/api dir.
        * Added wiki.
        * Prepare for 2.2.1 release.
        * Update per-module/class files.
        * Moved binding/cflow.rb to caller.rb.
        * Fixed up binding extensions.
        * Update tests and prepare for next version.
        * Ditto.
        * Renamed a couple test tasks.


2007-12-21  transami

        * Moved methods and groups task to trash.
        * Moved core hash/keyize to more.
        * Added test class/remove_descendents.rb.
        * Added all remaining per-method require libs from methods/ --will need to wrok through these over time.
        * Added trash work directory.


2007-12-20  transami

        * Adjust text according to per-method file changes.
        * All hash method, but the conversion methods, are now rpresented in core/facets/hash.
        * Added a few more Hash per-method files.
        * Add per-method libs for hash.
        * Updated facets/string.rb.
        * Moved string/format.rb to string/wrap.rb.
        * Updated String#brief.


2007-12-17  transami

        * Renamed ROLLRC to facets.roll.


== 2.2.0 / 2007-12-13

(2.2.0) This release provides improved rdocs and prepares facets for
use with RUby 1.9. It also adds Matthew Harris' duration.rb
library. Bug thanks to Matthew!

    * A lot of rdoc updates to core extensions --as promised ;)
    * Just about every method now has at least a brief explinaiton and an example.
    * integer/bitmask.rb has changed a bit --pun intended ;) Deprecated some methods and now use "~" instead of "-" to clear bits.
    * The name Array#unzip didn't makes sense, it was renamed to #modulate (though #collate seems better?)
    * Renamed Enumerable#collate to #mash (Map hASH); #collate and #graph remain aliases for the time being.
    * Deprecated Module#include_and_extend. Just use both silly.
    * More lib pp_s.rb has been removed. Use #pretty_inspect instead.
    * Split binding extensions up a bit more finely --eval.rb sprouted here.rb, self.rb and defined.rb.
    * Move Time#stamp out of conversion.rb and into time/ dir, and remove to_s alias.
    * Preliminary addition of Matthew Harris' excellent duration.rb lib (will integrate with times.rb better in future).
    * Added if clauses to handle upcoming Ruby 1.9 gracefully. Facets should now be just about ready for use with 1.9.

2007-12-13  transami

        * Fixed project.yaml summary.
        * Update AUTHORS list.
        * Update release notes.
        * Update CHANGES for 2.2.0.
        * VERSION 2.2.0
        * Added some missing tests dur to recent separations.
        * Minor update to test/general.
        * Updated tests to reflect recent changes.
        * Fixed test for continuation and removed test for pp_s.rb.
        * Move task/docpkg to task/doc/zip.
        * Moved task/config.yaml to meta/ per new Ratch.
        * Moved task/special to task/doc.
        * Minor updates to test and install tasks.
        * Updated todo list (in dev/).
        * Copied log/history.rd to CHANGES.
        * Removed log/history.rd and log/todo.rd
        * Fixed stylize.rb for use with 1.9 (fixed case statement).
        * Separated kernel/returning, now that #tap will be in 1.9.
        * Updated facets.rb for use with 1.9.
        * Separated time/stamp.rb.
        * Divided binding up into a few more pieces.
        * Fixed kernel/instance to play nice with 1.9.
        * Added test for string/op.rb.


2007-12-12  transami

        * Renamed accessor #attributes to #instance_attributes.


2007-12-10  transami

        * Removed continuation from core.
        * Removed pp_s.rb (use pretty_inspect) add continuation.rb.
        * Documentaiton improvements and moved continuation extension to more lib.
        * Added 1.9 check in continuation/create.rb.
        * Added op.rb to string.rb.
        * Added String/op.rb with String#- method.


2007-12-09  transami

        * Minor edit to basicobject.rb in light of 1.9.
        * Minor adjustments to lazy.rb to fix warnings by Ruby 1.9.
        * Added Matthew Harris' Duration class.


2007-12-08  transami

        * Added Hash#slice and Hash#except (didn't we have this before?)


2007-12-04  transami

        * Minor adjust to website.
        * Improved on tests in relation to doc work.
        * Handled some minor bugs found while documenting.
        * Mode doc improvements.


2007-12-02  transami

        * Add a couple new task for rdoc gen.
        * Added nbsp to quickopts task.
        * Website updates.
        * Work on website using siteparts.
        * Added registerable.rb, updated history.
        * Added #include_as to facets/namespace.rb.
        * Cleanup test hearders.
        * Rdoc improvements.


2007-12-01  transami

        * Removed test for kernel/require_esc.rb
        * Remove kernel/require_esc.rb.
        * Updated integer docs.
        * Updates to kernel test headers.
        * Documentation updates to kernel extensions.


2007-11-30  transami

        * Update docs continued.
        * Update hash test headers.
        * Updated hash extension docs.
        * Updated docs.
        * Added some missing tests.
        * Continued docs update.
        * Update docs.
        * Added test_collect.rb split-offs and test_mash in place of test_collate.
        * Updated lots of test headers.
        * Renamed Enumerable #collate to #mash. (old name, along with graph, will be an alias for time being)
        * Lots of doc updates.
        * Updated documentation for array extensions.


2007-11-29  transami

        * Updated AUTHORS.
        * Divided enumerable/collect into split.rb and each.rb as well.
        * Moved mapsend.rb to thread.rb.
        * Updated mapsend.rb to focus on threads.



== 2.1.3 / 2007-11-28

    * Fixed minor oddity in Enumerable/collate.
    * Fixed major issue with 2.1.2 where it would not core facets correctly.
    * Array#to_h used flatten, but it needs to be flatten(1).
    * Fixed minor issue with collate.
    * Move core/main.rb back to core/facets.rb as it conflicts with lib in more/.


== 2.1.2 / 2007-11-22

    * Dir::multiglob no longer handels -/+ modifiers. Use FileList instead.
    * Fixed task/install script.
    * Added copyright notice to COPYING file.
    * Renamed LICENSE to COPYING according to offical GPL policy.
    * Added exception#details.


== 2.1.1 / 2007-11-16

    * Fixed bug in command.rb that clobbered options.
    * Added kernel/ergo.rb.
    * Removed debug code.
    * Fixed options bug in command.rb
    * Moved nilclass/ergo to kernel/ergo.
    * Update Kernel#ergo.
    * Added pp_s.rb (Questionable addition, but we'll leave it for now.)
    * Added validation.rb. This is here for Nitro's sake --better techinques may replace it in the future.
    * Removed tracepoint.rb.
    * Added Console::Logger to logger.rb (may be separated in future).
    * Added option arity to command.rb.


== 2.1.0 / 2007-11-10

Major changes include a new and much-improved command.rb,
a new BiCrypt class for simple two-way crypotgraphy,
as well as attr_reader!, attr_writer! and attr_accessor!
for flag attributes, plus alias_xxx methods for all
attr_xxx methods.

    * command.rb has been completely rewritten. The API has changed completely!
    * There is no longer a Commmand::Optoins class. Use Console::Arguments instead.
    * Added BiCrypt class to crypt.rb for simple two-way encyrption.
    * module/attr.rb now has attr_reader!, attr_writer! and attr_accessor!
    * All attr_xxx methods have coresponding alias_xxx methods.
    * Fixed bug in Enumerable#cluster_by which returned nil instead of [].
    * Added UniversalOptions module.
    * Fixed minor bug in arguments.rb that prevented proper repeat parameters.
    * Fixed bug in to_console.
    * Moved common alias methods from attr.rb to alias.rb.
    * MasterCommand now passes (args, opts), until 1.9 is main stream.
    * Added BiCrypt class for simple two-way encryption.


2007-11-09  transami

        * Added dev/test
        * Renamed RELEASE to WHATSNEW
        * Added injecting test and cleaned up.
        * Fixed bud in enumerable/cluster_by (returned nil instead of []).
        * Cleaned up enumerable/permutation.rb
        * minor space removal
        * Complete rewrite of command.rb.
        * Added comment for potential future #is.
        * Added "tester" attribues attr_xxx!. Also added alias_xxx for all attr_xxx methods.
        * Added top-level log directory.


2007-11-08  transami

        * Added -q option to zip method in ZipUtils.
2007-11-05  transami

        * Remove #q reference from RELEASE.
        * Cleanup of test_initializer.rb.
        * VERSION 2.0.5
        * Fixed return bug in hash/op.rb.
        * Ok. #p is back. This will in fact be in 1.9, so we're good.
        * Allowed Class#initializer to return the attribute names.
            * This should allow things like: 'private *initializer(...)'


2007-11-04  transami

        * Added missing (*args) in #initialize on Hash.new.
        * Renamed #p to #q, because of multiple args problem.
            * I don't know how Ruby 1.9 plans to handle multiple args.
            * Will deprecate for 1.9 anyway so doesn't matter much.
        * Fixed package name in icli.yaml.
        * Added name field to meta/icli.yaml.
        * Added meta/icli.yaml.
        * Added a RELEASE file to hold current release notes.
        * Added log task.
        * Added changelog file in doc/log/.
        * Up'd version to 2.0.4.
        * Update task/groups.
        * Fixed to_h in Command::Options
        * Fixed bug in initialize.


2007-11-03  transami

        * Removed extest task. We will no longer need it.
        * Fixed bug in Hash#- Thanks to Xavier Shay.
        * Minor update to rdoc.yaml.
        * Renamed old changelogs.



== 2.0.5 / 2007-11-05

    * Added final methods Gavin Sinclair's Extensions project (contributed by Noah Gibbs).
    * Fixes bug with Dictionary#initialize
    * Fixes bug with Hash#-
    * Also improves changelog production.
    * Made #alias_method_chain compatible with current ActiveSupport version.


== 2.0.4 / 2007-11-04


== 2.0.3 / 2007-11-02

        * Touch up to methods task.
        * Update rsync filter
        * Minor updates fixing issues highlighted by running crosstest.
        * Many minor bug fixes after running against crosstest.
        * Added usage support for __foo options.
        * Fixed a many a test after running against crosstest.
        * Removed load task. It did not isolate the libs, so wasn't effective.
        * Added a number of new tasks.
        * Rename SMTP_TLS to Smtp_tls for Rdocs.
        * Moved rdoc.yaml to config/.
        * moved task/config to task/config/general.
        * Update tasks.


2007-11-01  transami

        * Added array/only,  symbol/to_proc (where did it go?) and hash/select.


2007-10-31  transami

        * Update roll file.
        * Moved test_command_options to test_command.
        * Update dictionary test to check dup and autohash.
        * Fixed autohash and dup bugs.
        * Verbatim support for Rails' version of #alias_method_chain.
        * Remove site/ directory.
        * Moved rsync filter up too.
        * Moved doc/site/ up to doc/.
        * Added javascript directory to doc/.


2007-10-30  transami

        * Updates across the board.
        * Updates to stylize and command.rb.
        * Made facets.rb a shortcut to facets/facets.rb (this is for Rolls, better way?)
        * Oh smack. Lots of stuff fixed.


2007-10-29  transami

        * Remove version.txt. No longer needed.
        * Removed meta/project.yaml, replaced by facets roll file.


2007-10-28  transami

        * Modifications to command.rb, snapshot and rbsystem.
            * Merged command.rb and command_options.rb into command.rb.
            * Added to_data aliases to snapshot.rb
            * Minor additions to rbsystem. Rather than System, maybe Ruby?


2007-10-27  transami

        * Removed embedded test from overload.rb.
        * Allow OpenStruct#initialize to take a setter block.
        * Downloader needs 'wb' flag rather then just 'w'.
        * Fixed typo and removed embedded test.
        * Fixed bug in command_options.rb, putting the class back in the Console namespace.


    * improved module/traits.rb


== 2.0.2 / 2007-10-08

    * cleaned up some test and updated version to 2.0.2
    * update methods to eleminate duplicate file names between lib/core and lib/methods


== 2.0.0 / 2007-10-02

2007-10-07  transami

        * doc session - clean up array methods


2007-10-06  transami

        * fixed enumerable/test_collect.rb
        * doc update some tasks
        * updated version to 2.0.1
        * minor bugs fixes
        * update methods task to display each file as it process it
        * added benchmarks for some enumerable methods.
        * moved demo/bench/bench_factorial to an demo/bench/integer subclass
        * added Erik Veenstra to AUHTORS for work on enumerable/group_by and cluster_by
        * minor improvement to test task to specifically read test_*.rb files
        * removed enumerable/partition.rb
        * move enumerable/partition.rb methods to collect.rb.
        * Improved Integer#of.
        * Minor improvements to collect.rb and partition.rb
        * Deprecated nonuniq!, bug fixed cluster_by and aliased group_by and partition_by.
        * Renamed Enumerable#partition_by to group_by (like RUby 1.9) and fixed bug in cluster_by.
        * update quick docs
        * Doc updates


2007-10-02  transami

        * Added Oliver Renaud to the AUTHORS list (oops!)
        * update README to not use folded lines
        * spellchecked README
        * update test task and test_aop.rb
        * minor update to meta/project.yaml
        * updates to groups task and methods task and version to 'stable'
        * updated test task to allow 'live' test
        * update AUTHORS
        * update test task and move AUTHORS file to toplevel
        * moved note/ to doc/notes
        * update tasks for core/fore move and moved todo to dev/
        * moved fore to core (and core to methods)


2007-09-20  transami

        * update test and install tasks
        * require fixes to cut.rb and attributes.rb
        * fixed tests for string/nchar and kernel/silence
        * Fixed String#brief in format.rb


2007-09-13  transami

        * removed 1stClassMethod from "more" docs
        * removed 1stClassMethod as a rdoc target (now in Core target)
        * update install and rdoc tasks
        * moved string/test_index.rb to string/test_nchar.rb
        * updated indexable tests
        * update string.rb to include string/nchar.rb
        * moved index.rb to nchar.rb
        * clean up string/index.rb


2007-09-12  transami

        * moved facets.rb to fore directory
        * add comment to groups task
        * added groups task
        * updated all extrension group files (array.rb, binding.rb, etc.)
        * uncapitalize meta files
        * update methods task a bit more, plus related configuration
        * updated methods task
        * removed lib/core --this is generated content (may be renamed too)
        * added load and stats tasks
        * update install task --this replaces setup b/c of Facets' special install needs
        * update project file
        * removed lib/facets
        * moved remaining libs to fore (will later consider an additional subdivision)
        * move facets/fore to fore/facets
        * move facets/more to more/facets
        * added ;ob/core, more and fore
        * move memorize


2007-09-10  transami

        * removed io and net directories
        * moved io/redirect.rb to more/ioredirect.rb and net/smtp_tls.rb and net/uploadutils.rb libs to more too.
        * few more libs moved to more/ directory
        * moved all the most obvious more libs to the more directory
        * moved fore "grouping" libs to fore directory
        * moved "fore" libs to fore directory
        * create for and more directories (yes, you know what's coming ;)
        * renamed remain.rb (was main_as_module.rb) to just main.rb
        * improved rdoc task and project.yaml file
        * better docs for OpenObject
        * improved method hiding


2007-09-07  transami

        * documentation touch ups
        * fixes for conversion.rb rather than conversions.rb
        * updated to website docs
        * moved demos to demo/sample
        * added bench and sample dir to demo


2007-09-06  transami

        * moved spy.html to light.html
        * menum change to webpage, fixed core doc link
        * moved metadata files to meta/ (info/ or box/ would be better?)
        * updated test_conversion.rb for to_h/to_hash
        * reverse_each instead of each for after advice in advice.rb
        * final fix to to_h/to_hash discrepency
        * added a Path and Root features to Pathname (good idea?)


2007-09-05  transami

        * update advice.rb test and moved old cut test to dev/scrap
        * updated advice; removed preinitialize.rb to trinkets project (it was too expiremental)
        * command_filter.rb needs to considered/developed; moved to dev/new/
        * fixed interface.rb fo singelton methods
        * updates to tests
        * whole lot of small bug fixes
        * add tests to revision control
        * removed old cut test (moved to dev/scrap)
        * working on tests


2007-09-04  transami

        * added read.rb (taken from readwrite.rb)
        * split readwrite.rb into read.rb and write.rb
        * remove string/unpack.rb, offset can be had using '@' format instead
        * renamed conversions.rb to conversion.rb, fixed some requires
        * improved attr.rb
        * some cleanup of enumerable extensions
        * setup annotations demo


2007-09-03  transami

        * add non-embedded tests


2007-09-02  transami

        * finally brough over toadcode prototype.rb and cleaned it up enough to be useful
        * removed annotations subdir
        * moved annotations/ann.rb and attr.rb to annotations.rb and attributes.rb
        * remove annotations.rb
        * moved annotations/settings.rb up a dir
        * remove settings.rb
        * chnaged multiton_id(e) to multiton_id(*e,&b)
        * updated test task
        * added Christoph Rippel to authors lists
        * added doc header to new multiton class
        * update to new version of multiton
        * playing around with multiton2.rb
        * renamed dev/try to dev/new
        * created dev/old to temporarily house old versions of libs that have been replaced.
        * fixed quick.html documentation
        * used old wiki.gif as email.gif instead
        * fixed config.yaml publish entry
        * some minor updates to index.html


2007-09-01  transami

        * moved site to doc/site
        * update to publish task
        * updates of tasks
        * added kernel/report.rb to hold debug/warn extensions.
        * renamed reporting.rb to silence.rb
        * update reporting.rb (created report.rb from it)
        * task work
        * clean up dev finis
        * cleanup dev just a bit more
        * continue cleanup of dev directory
        * moved dev/twiki to misc/
        * removed dev/core
        * moved require_directory.rb to misc/
        * added dev/misc for code scraps that might be useful but are not straight lib or task code
        * more dev changes
        * organize dev better
        * cleanup of dev continues
        * cleanup of dev dir
        * clean up dev dir more
        * some cleanup of dev directory


2007-08-31  transami

        * almost completed advice lib
        * added comment about possible update
        * deprecate instance_send and instance_map
        * work on rdoc task
        * work on rdoc task


2007-08-30  transami

        * added dev/cut dir


2007-08-29  transami

        * no reason to track .config
        * clean up trunk
        * added todo comment
        * added advice.rb to replace old aspects.rb
        * removed aspects.rb (sucked), added prototype.rb (infancy) and adjusted to class_extension.rb
        * removed #to_roman (now part of the English project)
        * cont. work on aop and cuts
        * fixed IMG tag bug
        * added yaml.rb
        * move #here convenience method to binding/eval (separate?)
        * added in order to remove kernel/misc.rb
        * consolidate string/regesc
        * added module/methods
        * updates to include and attr


2007-08-28  transami

        * fixed Range#umbrella
        * more organization of docs
        * orginizing docs


2007-08-27  transami

        * update val.rb
        * added proc/fn.rb (from kernel/misc.rb) and fixed typo in compose.rb
        * moved misc.rb to val.rb
        * better organization of some kernel methods
        * moved #here alias to eval.rb
        * minor updates and some bug fixes (modspace what broke)
        * removed file/yaml.rb in favor or just yaml.rb
        * moved this to facets/yaml.rb


2007-08-25  transami

        * work on aop system
        * Added aop.rb, and cut.r and recursive.rb
        * moved cut.rb to dev (old version will be deprecated)
        * added to_hash to Dictionary, and minor mods to others


2007-08-24  transami

        * oops, no need for enumerator directory
        * moved threaded_send.rb to mapsend.rb
        * moved threaded_send out of enumerable/ dir
        * updates to elementor.rb
        * merged instance_map into threaded_send
        * removed map_send
        * merging map_send with threaded_send


2007-08-23  transami

        * cont work on elementwise methods
        * divide elementwise functions betwee two libs
        * uniq.rb is merged into count.rb
        * removed count.rb (uniq.rb will become count.rb)


2007-08-22  transami

        * continued refinement of enumerable extensions
        * general improvements to the organization of enumerable extensions


2007-08-19  transami

        * removed facets/cli dir
        * moved all cli libs from facets/cli to facets/
        * moved cli support files to facets locations
        * moved cli lib to facets main (also modified functor)


2007-08-18  transami

        * renamed hash/reverse to hash/merge (it contains #reverse_merge)


2007-08-11  transami

        * remove instance_intercept (moced to Trinkets project)


2007-08-10  transami

        * continued modification of those tasky tools
        * removed lib/more (this is it!)
        * moved M-Z of more/facets to facets (this is it!)
        * moved A-L of more/facets to facets (this is it!)
        * removed lib/core (this is it!)
        * moved lib/core/facets.rb to lib/facets.rb (this is it!)
        * moved lib/core/facets to lib/facets (this is it!)
        * added file/yaml.rb
        * added a list of libraries considered "core"
        * continued work on build tools
        * change tools for core/more convergence (so help us god!)
        * added conversion requirement to some core libs
        * update methods task

        * update quick.html to mirror rdoc changes --still needs work though
        * remove old rdoc task
        * added rdoc section (minimal) to tool/config.yaml
        * nope. remove site/rdoc
        * add rdoc dir, should we?
        * remove site/rdoc in preperation for new way
        * facets.rb belongs to core/
        * renamed some doc files
        * removed src/core
        * move src/core/lin to lib/core
        * added kernel/constant
        * remove src/core/web
        * moving more of core to top-level (svn sucks!)
        * moving core support files to top-level
        * removed src/more
        * move src/more/lib to lib/more
        * made lib dir (to replace src)
        * added settings.rb which points to annotations/settings.rb
        * moved svn to annotations/ subdir
        * moved dev files to top-level as part of more transition
        * temporarily removed dev/more
        * moved annotations demo to demo dir
        * added demo folder
        * add dev/more
        * remove struct again! (stupid svn)
        * moved file to top-level doc as part of more transisiton
        * bullshit svn crap
        * ann moved back to more (strongly considering annotations for it's own project)
        * build moved back to more
        * aop moved back to more
        * cast moved back to more
        * crypt moved back to more
        * exts moved back to more
        * file moved back to more
        * meta moved back to more
        * misc moved back to more
        * model moved back to more
        * struct moved to back to more
        * moved sync back to more

    * moved commandoptions.rb to command_options.rb
    * rewrote command and command options libs
    * initial Subversion import


== 1.8.54 / 2007-02-19

    * added reqiure to ostruct.rb test
    * fix to command.rb's initializer
    * fixed bug with times.rb beginning_of_year and beginning_of_month
    * replaced pqueue and heap with new working class (thanks to Olivier Renaud)
    * fixed bug in ormsupport.rb (this will be moved out of facets in next release)
    * added empty? to dictionary (removed old subclass of Hash)
    * significant improvements to command.rb thanks to Tyler Rick
    * added tests to elementwise and tap
    * fixed test for elementwise and op_tilde_self
    * added enumerable/map_send
    * added thread_map and thread_map_send thanks to greg
    * added operator "~@" for enumerable/elementwise
    * added more/consoleutils.rb
    * added string/cleave
    * added capitalize_all thanks to Richard Laugesen
    * cartesian_product is an alias of enumerable/cart
    * added array pad thanks to Richard Laugesen
    * added kernel/tap
    * fixed test/unit load issues
    * converted facet/ requires to facets/core or facets/more as needed
    * further improvements to arguments.rb (looking good!)
    * improved symbol/self/generate
    * bug fix kernel/autoreload arguments needed to be in opposite order
    * add to_xoxo
    * removed bad character codes in multiplier.rb
    * used yaml to allow json.rb to work for all object in general
    * improvements to functor (note: is to_a and to_proc okay?)
    * add test to string/bytes.rb
    * bug fix to nilclass/op_cmp
    * fixed enumerable/op_pow to use enumerable/cart
    * added array/op_div
    * adjustments to xmlbuilder and htmlbuilder dur to buildingblock changes
    * improved buildingblock.rb
    * simplified interface of arguments.rb (still a little more to do)
    * improvements/simplifications to Dir.multiglob
    * added new authors to list
    * fixed misspelling of behavior.rb (was bahvior.rb)
    * removed #own from base list in facets.rb (really need a standard for "singleton class")
    * minor adjustments to uploadutils
    * fixed bug in aspects.rb that would not handle args of wrapped method
    * Symbol#to_s optimization, had to remove freeze
    * updates to fileutils/stage (stage worth keeping?)
    * update to credits
    * fix bug in kernel/ask, returns more than one character
    * cleanup of enumerbale/graph (no effective change)
    * new super fast enumerable/cart by Thomas Hafner (replaces #cross)
    * improved multiglob rountines (accept '+' and '-' prefixes)
    * No longer will track project file via scm until it settles
    * fixed bug in attr_tester, thanks Dov!
    * added weekdays to times.rb thanks to Ryan Platte and Dave Hoover
    * improvements to dictionary.rb (no longer a subclass of Hash) thanks Jan!
    * re-replace openhash with openobject
    * improvements to ann.rb and ann_attr.rb. works, yea!
    * fixed bug in string/singular.rb
    * changed enumerable/cross into enumerable/cart and cartesian_product
    * openobject returns (openhash was a bad name, thanks george)
    * moved enumerable/cross to enumerable/cart (cartesian_product)


== 1.8.0 / 2007-01-24

    * added buildingblock.rb, replaced builderobject.rb
    * adjust require for "yored" files
    * HtmlBuilder and XMLBuilder aer now based on BuildingBlock
    * bug fix for command.rb
    * minor improvements to basic object (object_self to access kernel methods)
    * ostuct adjustment, use #instance_delegate to get underneth the open access
    * module/include_as is now based on module/namespace (thanks Pit!)
    * minor adjustments to methods for (class<<self;self;end)
    * fixed enumerable/partition_by
    * further updates to project info file (need to stop versioning this)
    * deprecated (yored) builderobject.rb (poor implementation)
    * added hash/insert; like store but only if key isn't already present
    * added module/include_and_extend
    * facets.rb now references facets/sys.rb
    * added facets/automatic -- very cool, albiet expiremental way to load core methods automatically!
    * added File::mulitglob_sum; accumulates file patterns, and accepts '+' and '-' prefixes
    * added module/module_method; like module_function but makes method public
    * added module/include_function_module; attempts to properly include one function_module into another
    * kernel/yaml convenience method for YAML::load
    * added kernel/supress; supress errors while executing a block (nice DHH!)
    * added symbol/chomp, like string#chomp
    * added proc/to_h; converts an assignment proc into a hash
    * proc/bind; bind a proc to an object, returning a method
    * added module/prepend; provides dyanamic method wraps for modules, and static wraps for classes
    * added module/new; use a module as if it were a class
    * added module/alias_accessor
    * renamed #superior to #super_at
    * kernel/instance_class; yet anouther meta_class name, but a more sensicle name this one
    * added kernel/populate; populates an object's inst. vars from a hash or assingment block
    * added kernel/daemonize; one last thanks to DHH!
    * added enumerable/injecting; like inject but automatically returns the memo from the block
    * added kernel/object_send, a true public-only send method
    * added kernel/silence_stream; output to null device; thanks DHH!
    * added kernel/instance_values, thanks DHH!
    * added Config:inspect for rbconfig
    * added hash/pairs_at (aking to values_at)
    * added _why's metaid methods (meta_class, meta_eval, etc.)
    * added kernel/enable_warnings to complement silence_warinings
    * added integer/to_roman
    * added logical operators for hash (and/or)
    * array/to_path convert ans array to a path string
    * array/index takes a block
    * added fileutils/compress; very simple convenience methods for archiving folders
    * added fileutils/stage adn staged, a means of transfering files accoring to preset rules
    * had to remove taskable.rb for now (implementation won't work as toplevel include)
    * added kernel/ask, simply command to get console input
    * moved deprecated #facet_require to yore lib
    * deprecated (yored) kernel/own, yet another term for the singleton class
    * renamed quaclass to qua_class
    * added populate.rb, mixin for classes that need on a basic initializer
    * added version_number.rb (a specialized tuple)
    * OpenObject = OpenHash (OpenObject will eventually be deprecated)
    * added uploadutils.rb
    * added Joel VanderWerf's great script.rb script
    * added Austin's minitar.rb --it's just too damn useful!
    * added htmlfilter.rb very nice html escape class
    * added dependency.rb, allwos method to have dependend execution (like rake tasks)
    * added arguments.rb this is for parsing console command arguments
    * add new version of annotations: ann.rb and ann_attr.rb
    * memoize should now work at toplevel
    * removed dataobject.rb (was never used)
    * minor doc change to instance_intercept.rb
    * doc change to methodfilter.rb (maybe deprecat in future)
    * deprecated (yored!) module/inject; what a silly method
    * added File::yaml? to roughly detect if a file is a yaml file
    * deprecated kernel/require_facet (no longer needed)
    * moved old module/namespace implementation to yore
    * adjust old annotation.rb (now in yore) to use openhash
    * moved plugin.rb to ratchets/library project
    * renamed openobject to openhash !!!
    * proper credit for multiton goes to Ara T. Howard!!!! Also improvements.
    * remove library.rb (move to ratchets/library project)
    * minor bug fix to httpaccess
    * updated autovivify.rb to use openhash
    * improvement to command.rb
    * imporved time/stamp
    * reimplemented proc/to_method for more sensible behavior
    * reimplemented module/namespace, very clever thanks to pit captain
    * added module_load and module_require, e.g. load into and require into
    * reimplemented instance_exec, should be much improved
    * doc updates to inflect.rb
    * updates to Hash op_add, reverse_merge, and rekey
    * each_slice is now just an alias via enumerator & fixes to partition_by
    * minor adjusment to multiglob
    * modified all.rb (not recommended!) to require facets/sys
    * modifications to project information file (should this be versioned?)
    * created yore lib to store deprecated features (good idea!)
    * modified PROJECT info file
    * added module class/module_load and _require
    * remove facet/ redirect lib from darcs repository
    * OpenObject is now OpenHash (OpenObject still exist for backcompat)
    * kernel/returning is a stub for kernel/with
    * added proc/update as alias for #call per Tim Pease use of Proc as Observable
    * added behavior.rb by Nobuyoshi Nakada (plan to improve)
    * rewrote taskable.rb using classes to represent tasks; it is much improved
    * openobject.rb doc updates
    * major update to functor which is now a subclass of Proc (should be faster)
    * improvements to dictionary.rb to go along with additions of first and last
    * small improvements to command.rb
    * removed uses of __class__ for object_class and solidified usaged of #as in basicobject.rb
    * deprecated ostruct shadow methods (i.e __table__) in favor of #instance methods
    * added test to module/alias_method_chain
    * improvements to instance_exec thanks to Mauricio Fernandez
    * improvements to kernel/send_as
    * improvements to kernel/as
    * minor doc addition to kernel/as
    * fixed syntax in hash/op_add.rb
    * improvements to hash/partition_by thanks to Gregory of Laurel
    * added Mauricio Fernandez to authors
    * added addtional work library lore
    * moved "calibre" project information files
    * moved a number of "in the works" libs to ToadCode project
    * removed predicate.rb, an expiremental logic system, and moved to ToadCode
    * Added plugin.rb, an indirect require mechinism, ie. a plugin system
    * remove one.rb and moved to ToadCode project, this was just silly/fun library
    * Added library.rb which is a library ledger system (used to be roll.rb)
    * added kernel/with which instance_eval's a block on with's subject
    * rekey is an improved version of normalize_keys (ie. the basis of symbolize_keys)
    * multiglob is like glob but handles a list of patterns
    * proper access to openstruct's underlying table
    * minor adjustment to taskable.rb
    * minor adjustment to #dresner docs
    * minor adjustment to #as
    * simple doc addition to setup.rb
    * doc fixes and losening toplevel constraint to Object in taskable
    * made OpenObject #update and #merge public; added to_hash
    * minor "public" fix to main_as_object
    * removed unorder_store and store_only; added first/last to dictionary
    * continued improvements to command.rb
      added some new callbacks such as option_missing;
      also handles method_missing properly now
    * minor adjustments to module::@+
    * added string/rewrite
    * test fixes to module/include_as
    * documentation fix for class_extension
    * minor edit to supermethod (also finish #superior removal)
    * cleanup kernel/set_with code
    * update kernel/metaclass can now take a block
    * added hash#+ and hash#- (op_add and op_sub)
    * added cache to enumerable/every
    * minor updates to facets.rb
    * removed kernel/superior (silly name)
    * minor modifications to PROJECT file
    * [add] more/autovivify.rb expiremental lib.
    * [update] Minor fix to command.rb to not use Kernel methods as subcommands.
    * [update] Work on annotation.rb to improve support for :self.
    * [deprecate] enumerable/permute.rb (replaced by permutation) and minor test fix to linkedlist.rb
    * [added] linkedlist.rb (thanks Kirk Haines!)
    * [added] enumerable/sum (thanks to Gavin Kistner)
    * [added] array/each_combo and combos (Eunumerable.combinations will be deprecated eventually)
    * [rename] changed enumerable/permute to permutation
    * [update] annotation.rb, fixed :self key
    * [added] pathname/op_div
    * [deprecated] hash/each.rb
    * [removed] hash/each.rb, this variation of Hash#each is too "dangerous" in practice
    * [update] module/self/op_add.rb: fixed inclusion order
    * annotation.rb, return annotations of self when key is :self [updated]
    * module/self/op_add.rb and op_sub.rb - traits like features [added]
    * minor improvemtns to module/clone_using and integrate
    * command.rb: minor change to docs [update]
    * openobject.rb (added NilClass#to_openobject) [update]
    * enumerable/each_slice.rb [replace]
      Ruby already has #each_slice if you require 'enumerator'. And for 1.9,
      I believe, this will be present automatically. So Facets' each_slice
      has been replaced with a simple redirection to require 'enumerator'.
      Ruby's version is slightly different in that it won't check arity if
      a slice count is not given. For this, use enumerable/each_by.
    * array/delete_at.rb [removed]
      Ruby's Array class already has a #delete_at method,
      although this is another method at odds with Hash.
      Use #delete_values_at instead.
    * moved File.bitbucket to File.null (but bitbucket was so "fun"! ;)
    * added nilclass/to_path
    * added kernel/load_local
    * added kernel/callee
    * added enumerable/eachn, integer/each and integer/of
    * re-added array/delete_values_at
    * added filetest/self/root
    * added cache.rb
    * moved Dir.bitbucket to File.bitbucket
    * removed task file in favor of sake based util/
    * added main_as_module
    * added doublemetaphone (Thanks Lawrence Philps!)
    * rewrote taskable.rb
    * minor doc fix to association.rb
    * added symbol/to_s which caches the result for speed up
    * additions and adjusments related to hash/delete_at
    * added Dir.bitbucket
    * update to array/op_fetch to include op_store
    * updated docs and util tasks
    * minor changes
    * added filesystem.rb
    * taskable should now work at the toplevel too
    * still working the organization as Reap/Sake change
    * started setting project tasks up for sake
    * updates to enumerable each_slice
    * updated names of meta files
    * updates to READMEs
    * added trace to command.rb
    * organizational changes


== 1.7.0 / 2006-07-25

    * fix to inifinty.rb
    * comment on cut.rb needed a quick fix
    * updated infinity
    * added tkxml.rb
    * allow tasks to to arguments (all dependent tasks must take same args)
    * update infinity.rb to conform more with common standards
    * error catch added to command.rb (thanks Jonas)
    * added singleton annotations
    * minor improvement to wrap_method and proc/compose
    * added more/infinity.rb
    * major improvement to String#singular and plural
    * update normalize_keys to take a proc instead of a "send" parameter
    * projectinfo backups change
    * added cuts implimentation
    * separated integer/op_mul from compose, op_mul now composes and Integer#of
    * wrap_method, no need to undef method before redefining it
    * move calibre files (will we do ever use?) to work/pore/meta
    * added work dir to repo
    * fix instance_interception test
    * doc cleanup
    * added hash/op_div and array/op_div to BASE.
    * remove kernel/called and fixed callee,__callee__ and __method__.
    * just about prefected OpenObject
    * keys_to_sym to symbolize_keys usage
    * remove explore dir, perhaps better to do without midstage
    * added to_a to OpenObject
    * minor touchup to opencascade


== 1.6.0

    * PrivateAccess expiremental class
    * added reverse_merge  (from Active Support)
    * adjustments to stringify_keys, record normalize_keys
    * work on other Hash subclasses Dictionary, OpenCascade, and Hash#having_fallback features
    * added some core methods enumerable#divide, array and hash op_div, kernel/meta
    * deprecated generate_method_name and generate_instance_method_name
    * Hash methods keys_to_s and keys_to_sym to stringify_keys and symbolize_keys
    Both now depend on normalize_keys
    * rewrote openobject as a subclass of Hash with a method filter
    * rewrote annotation.rb and moved into more/
    * add meta docs to darcs
    * added Jan Molic's Debugger(Logger) to explore
    * calibre task (worth the effort?)
    * added Symbol::generate
    * remove generate_method_name methods
    ** removed kernel/generate_method_name
    ** removed moodule/generate_instance_method_name
    Neither were thread safe.
    * new implementation of openobject cont.
    * updated dictionary class
    1. created subclass AutoDictionary, now used by Dictionary.auto
    2. deprecated ::key_new and :value_new, use ::new.by_key and ::new.by_value instead.
    3. Retained ::alpha but changed ::auto_key to ::auto_alpha.
    * new implementation of openobject in Facets/EXPLORE
    * Added deep_clone (thanks Jan Molic)
    * project metadata work adjustments
    * minor update to tagiterator.rb
    * add _darcs expection to FileList
    * fix to nilclass#status (accept single parameter)
    * added Hash.auto (thanks Jan Molic)
    * remove blankslate alias to basicobject
    * added annotation and instance_intercept to Facets/EXPLORE
    * added Kernel#to_data
    * add Daniel Berger's Hash#to_stuct
    * moved ValueHolder in snapshot.rb to Snapshot::ValueHolder
    * minor bug fix to alias_method_chain
    * fix compatiblity with Reap
    * improved Proc#to_method and Kernel#instance_exec
    * added instance_exec (duh)
    * added object_clone and object_dup object_ methods are intended as non-overridable (although you cna if you must).
    * no Configuration alias for Settings
    * added facets/explore libs
    * added settings.rb from glue
    * openobject uses self[] instead of @table[]
    also update proj/infp to start 1.5 series
    * deprecate BaasicObject


== 1.4.5 / 2006-07-05

    * move ProjectInfo to proj/info
    * better arrangment of repository
    * Added nil#status, module#alias_method_chain and enumerable#cascade.
    nil#status - Allows a messgae to be passed through a failure chain.
    module#alias_method_chain - from rails this is clever idiom for
    module-based method wrapping. A limited solution, but since
    there's no standard solution as of yet, well support til then.
    enumerable#cascade - cascade a list of action on each element
    of an enumerable.
    * method missing in htmlbuilder effected by basic object fix
    * minor update to functor.rb
    * change WebAgent to Web
    * Removed hash/keys_to_iv b/c it is a poor name. Since the alternative of
      keys_to_instance_variables conveys the wrong idea, decided to just get
      rid of this. Instead use the Rails compatibile hash/variablize_keys.
    * 1.4RC3
    * initial import


== 1.4.4 / 2007-07-03

    * added nil#status - Allows a messgae to be passed through
      a failure chain.
    * added module#alias_method_chain - from rails this is clever
      idiom for module-based method wrapping. A limited
      solution, but since there's no standard solution as
      of yet, well support til then.
    * added enumerable#cascade - cascade a list of actions on each
      element of an enumerable. Better name for this?
    * method missing in htmlbuilder effected by BasicObject fix
      (use __self__.method instead of __metod__)
    * minor update to functor.rb. Added @self = function.binding.self.
      Still tweaking for best meta informatin access.
    * change WebAgent to Web
    * Removed hash/keys_to_iv b/c it is a poor name. Since the alternative
      of #keys_to_instance_variables conveys the wrong idea, decided to just
      get rid of this. Instead use the hash#variablize_keys which is also
      Rails compatibile.


== 1.4.2 / 2006-06-21

    * Started using Darcs --finally!
    * Transition to Darcs has interupted ChangeLog though :(
    * Mostly minor fixes in prepeartion for official 1.4 release.
    * Adjusted BasicObject slightly, further reducing unhidden methods.
      Among them __object__, __method__ and #as. Also added method_missing
      that detects shadow methods and rebinds them to Object. Keep in mind
      that woun't help you if you override method_missing which is
      typical for this class.
    * Fixed bug in BasicObject#__self__.


== 1.4.0 / 2006-06-05

    * Added Cookie, HTTP and HTTPAccess of ...'s library.
    * OpenObject's __get__ and __set__ methods have been changed
      to __fetch__ and __store__ to correspond to the Hash methods.
    * Added OpenCascade, which is like OpenObject but chains access.
    * Added ...'s lazy.rb which include's Future and Promise classes.
    * Added task.rb, which provides a Rake interface compatible task
      system, but that can be used in any code.
    * Improved Hash#traverse (it now does all traversing before yielding).
    * kernel/me, kernel/methodname and kernel/method_name have all been
      deprecated in favor of the 1.9 standard kernel/__method__ and
      kernel/__callee__.
    * Console::Application is deprecated and is no longer an alias for
      Console::Command.
    * Console::Command also now supports run-on flags (eg. -xvzf).
    * More's classinherit.rb has been removed, and classmethods.rb will be
      too in  another version or two. You should transition all uses of
      these to core/module/class_extension.rb.
    * Updated tuple.rb so that when a string is converted to a Tuple (#to_t)
      the values wll be made integers if they are composed of only numbers.
      If you need all strings you can use a block since the block bypasses
      this auto coercement, eg. to_t{ |v| v }.


== 1.3.1 / 2006-04-17

    * Deprecated string/to_arr, and slightly adjusted string#to_a.
      (Not commonly used so not a major change.)
    * Minor bug fixes.


== 1.3.0 / 2006-04-05

    * Ported parts of Nitro's Glue library to Facets.
      * more/aspects.rb
      * core/module/on_included.rb
      * core/module/expirable.rb
      * core/enumerable/accumulate.rb
    * Added xoxo.rb, json.rb and rtals.rb.
    * Repaired missing data files for units.rb.
    * Moved cattr methods from module/ to class/.
    * mattr methods are in limbo at the moment.
      (They were aliases for cattr.)


== 1.2.1 / 2006-03-29

    * kernel/meta has been renamed to kernel/instance


== 1.2.0 / 2006-03-24

    * Added zimba.tm's string/modulize, pathize and methodize.
    * Added some Gem methods, self/active?, self/gemspec, self/gempath.


== 1.0.3 / 2006-02-10

    * A last ditch attempt to keep facets and calibre as one project.
    * Added _why's Array modulo.


== 1.0.0 / 2005-12-04

    * Sped up string#similarity.
    * By popular protest deprecated usage of "AClass.use Facets, :amethod".
    * Created nicer layout of facets/support, /group, /english (one day /method).
    * Odd sets of facets have been move to facets/group/, eg. facets/group/inflect.
    * All is now well preped for a Rolls release shoud that come about.


== 0.10.30  Halloween

    * Change OrderedHash (ohash.rb) to Dictionary (dictionary.rb).
    * Change BlankSlate (blankslate.rb) to BasicObject (basicobject.rb).
    * Old versions of the above should still work, but throw warnings
      and will stop working come next version.
    * 1.rb has been renamed to one.rb (I know, two more characters,
      but you can do it! ;)
    * Methods enumerable/op_mod (%) and enumerable/eF are deprecated.
      Use #every or #ew instead.


== 0.10.11  Palapable

    * Merged Mega into Facets. I put the old Mega ChangeLog at
      the bottom of this document.
    * This represents the One-Point-Oh realease (albeit RC1) of
      Facets, but from now on I'll be using date versioning
      --if you look at the versions below you may understand why.
      The versioning sequence has no real rationality.
      Instead I will use this simple Rational Versioning Policy:
      * If YYYY-MM-DD it's a development release.
      * If YYYY-MM it's an official release.
      * If just YYYY it's hella stable.
      One might argue this is not as robust as a compatability
      significant point-based versioning system, but I'd say that's
      all well and good in theory, now give me something that actually
      works in practice.


== 0.9.5  Rebirth

    * Rebirth of Facets! As cool as the name Nano is, it became clear
      that most people are drawn toward the name Facets. So we are
      reverting back. Nonetheless Nano will remain a viable alias for
      Facets.
    * Must now use <code>require 'facets'</code> prior to using
      other Facets. This does two things. First it loads the
      base methods, which ensures that all programs have them
      readibly available when using Facets. Secondly it supplements
      #require to handle aliases. In essence, require 'facet/...',
      require 'facets/...' and require 'nano/...' all point to the
      same place(s). (NOTE This is a precursor to a more universal
      system that will handle aliasing automatically.)
    * kernel/require_esc has been removed. #require_nano will be also
      in the next release. These will no longer be needed thanks to
      the aliasing system.


== 0.9.2  Littles

    * Added string/starts_with? and string/ends_with?
    * Fixed module/memoize to cache on a per class/module bases.
    * Added module/is as an alias for /include.
    * Added module/shadow_method and shadow_all.
    * Renamed module/superup (which was module/supers) to module/as. And defined a new
      method called /superior which is like /super but skips to a sepecified ancestor.
    * Renamed module/super_send to module/send_as.


== 0.9.1  Wraps

    * Added module/nesting (not to be confused with the class method Module::nesting).
    * Thanks goes to Gavien Kistner for new string/word_wrap methods
      (with additioanl thanks to Dyane Borderson for his suggestions).
    * Added hash/each_with_key and each_with_index, as well as array/each_with_key;
      increasing polymorphism between the two classes.
    * Moved array/each_pair to enumerable/each_pair and changed how it worked to
      what one might expect.


== 0.9.0 / 2005-10-28 - NotUorI

    * Deprecated object#special_class, which was a method for (class<<self;self;end).
      Already have too many aliases for this, and though the name is fitting, the simpler
      method #own is better (alternative: #singleton).
    * Fixed enumerable/uniq_by file which was misnamed 'unique_by.rb'.
    * BIG CHANGE! Got rid of URI encoding on file names and sub'd a converson table
      of english readable names. Thanks Jeff Wood, Florain Gross, Dav Burt,
      Gavin Kistner, James Edward Gray II, Brian Schr√∂der, Mauricio Fern√°ndez,
      David A. Black, Gavin Sinclair, Nikolai Weibull and Christian Neukirchen.


== 0.8.3  UorI

    * Added kernel/uri and kernel/unuri
    * (Good idea?) removed methods module/sattr, sattr_reader, &c. Instead created object/meta
      in which attr, attr_reader, &c. are made public. So, sattr -> meta.attr.
    * Added array/unzip
    * Added logger/format and logger/format_message (stub).
    * Added string/dequote.
    * Class method file names now begin with '::' to separate them from instance methods.


== 0.8.2  Nano Revolution

    * Name Change! What was Ruby Facets is now Nano Methods!
    * New minor version as there has been a change of plans with the integration of what was Carats.
      The classes and modules have been reseperated into their own project called Mega Modules.
    * Modified the #firstxxx/#lastxxx methods to be more congruent and comprehensible.
    * Renamed object/supers to object/superup. Better!
    * Got rid of symbol/gen. Use object/generate_method_name or  module#generate_instance_method_name
      instead ( Is that the longest non-foo method name ever? :)
    * The file 1st.rb has moved to object/method. This modifies #method to persist the returned
      Method object. The original non-persitent version of #method is aliased to #original_method.
      (This arrangement is not set in stone though, and is still be considered.)
    * Added module/clone_using, module/clone_ranaming and module/clone_removing.
    * Added module/integrate (I love this one!)
    * Added many new enumerable methods: #filter_map, #compact_map, #commonality, #frequency,
      #probability and #find_collisions.
    * Moved some methods from array to enumerable: #each_permutation, #each_combination,
      #each_unique_pair and the class method ::combinations.
    * Added string/bytes per ruby-dev summary 26385-26467.
    * Moved #cattr_reader, #cattr_writer and #cattr_accessor from Class to Module.
    * Renamed numeric/octet_units to numeric/bytes_to_s and added a #bits_to_s as well.
    * Added class/descendants (alias subclasses) and class/remove_descendents, as well as
      object/descendents_of and object/remove_descendents_of.
    * Added methods to comparable: #cap, #clip. There are also #at_least and
      #at_most, although FYI #cap and #clip handle the same functionality.
    * Removed string/table_name and string/class_name (they were too Rails specific).
      Note: A new module has been added to Mega Modules, called orm-inflect.rb. It contains numerous
      methods for doing this sort of thing.
    * Added numeric/ceil_multiple (not sure about name though, perhaps a better name like "ceil_to"?).
    * Added string/soundex for calculating the soundex code of a word/name.
    * Added io/expect. I thought Ruby already had this but can't find it, so here it is for now.
    * Placed Florian's binding-of-caller.rb in binding/of_caller. Makes more sense there.
    * Fixed bug with Continuation::create (it wasn't defined as a class method and should have been).
    * Fixed bug with string/capitalized? which wasn't always giving the correct result.


== 0.7.2 / 2005-05-22 - George II

    * Added a class method dir/recurse which allows one to loop through a dir and all its
      subdirs, etc. It also has an alias #ls_r. Thanks goes to George Maschovitis for this.
    * Changed array/permute to array/each_permutation.


== 0.7.1  Quick George

    * Added facet.rb, although expiremental it makes it possible to use atomic methods without
      specificaly requiring them. It uses Object#method_missing to require them as needed.
    * Improved on "molecules", i.e. files that require numerous related atoms in a single go.
      These will see a great deal of continued improvement in the future.


== 0.7.0  Georgian Transform

    * All methods with names containing non-alphanumeric characters now have facet
      files without those special characters. This removes some incompatibilites with
      certain systems (including Windows). All such symbols have been replaced with
      CGI escape sequences, for instance 'in?.rb' becomes 'in%3F.rb'. To avoid having
      to use these "ugly" names, a new method has been added, kernel/require_facet.
    * Methods that were grouped together in the same file have been separated
      into their own files. Pure Atomicity has been achieved!
    * The method array/put has been dropped in favor of array/top (as a better alias for #unshift).
    * Methods #matchdata/post_match_from and #matchdata/pre_match_from have deprecated
      in favor of more generalized methods that serves the same purposes,
      matchdata/matchtree and matchdata/matchset.
    * Added module/include_as.
    * Added array/permute.


== 0.6.3  Gemstone

    * Gem is now avaliable!
    * Added kernel/require_all which allows one to require a pattern of files,
      making it easy to require every file in a directory.
    * Added hash/traverse and hash/traverse!, which takes a block and iterates over
      each key-value pair descending into subhash values and applying the block.
      (Thanks goes to Ara T. Howard and robert for their help.)
    * Added hash/collect. This uses enumerable/graph so that
      hash/collect will return a hash rather then an array.
    * Added numeric/before and numeric/after in place of #ago and #since
      and aliased #ago and #since to them, per the suggestions of
      Francis Hwang.
    * Added "poor man's profiler", time/elapse. (Thanks goes to Hal Fulton).
    * Changed enumerable/build_hash to enumerable/graph. The method #build_hash
      has been aliased to #graph for the time being for backward compatability.
    * Added array/last_index. (Thanks goes to Jabari)


== 0.6.2  Refinement I

    * Added kernel/resc as a shortcut for Regexp.escape.
    * Renamed hash/keys_to_string to hash/key_to_s and
      hash/keys_to_symbol to hash/keys_to_sym to be more consistant
      with other methods and what these methods specifically do.
      The old names have been deprecated.
    * Added hash/has_keys?, which allows for checking multiple keys at once.
      Also includes #has_only_keys?
    * Added Rail's Time and Byte modules for Numeric with
      numeric/times.rb and numeric/bytes.rb (I've been informed that
      thanks go to Richard Kilmer for this. Thanks!)
    * Added numeric/octet_unit which utilizes numeric/bytes.
      (The name of this method may change in the future though.)
    * Added enumerable/uniq_by.
    * Added module/abstract.
    * Added module/redirect which is similar to alias, but does not
      copy the method, but rather wraps it. It also takes a hash so
      multiple methods can be redirected all at once.
    * Added string/shatter which is similar to split but includes
      the matched portions of text.

== 0.6.1  Florian's Mixes

    * Updated the current set of mix files which were still from
      version 0.5.0. (2004-12-31)


== 0.6.0  Florian's Onslaught

    * Major revisions made by Florian's onslaught. (2004-12-28)
    * First general public release.


== 0.5.0  Fit for First

    * This is the beginning of offical releases. (2004-12-23)
    * Now called Facets.
    * Changed layout to be completely atomic! (2004-10-30)


== 0.4.0  Raspberry

    * Scoured the Ruby world for useful additions.
    * Changed name again from A.B.C. to Raspberry.
      I can't seem to settle on a name. Even the new
      subsections have changed five times. (2004-08-08)
    * Adjusted Tuple to use Tuple::[*args] instead of ::new, which now takes
      a single argument instead, either an Array or a String which it splits.
    * Removed services.rb unitl in gets fixed and a better name.


== 0.3.3 Mega2

    * Added inheritable.rb, a lib for creating class vars inherit from ancestors
    * Addes annotations.rb, a lightweight metadata system good for annotating
      methods esspecially. It is built on top of inheritable.rb.


== 0.3.2 Mega

    * Added services.rb, a lib for managing methods as first class objects
    * Fixed/cleaned-up orm_supprt.rb


== 0.3.0  ABC

    * Reorganinzed all of this together in a nice neat way.
    * Changed name of library from Succ to A.B.C.
      which stands for All Base Common. (2004-02-02)
    * Name change to Mega Modules!
    * Added a few important files: multipliers.rb, binary_multipliers.rb,
      time_in_english.rb and orm_inlectors.rb.
    * Each one of these is a "Methods Module", i.e. They are a collection of
      closely related methods that modify one or more core classes/modules.
      Individually these methods could have very well ended up in Nano Methods,
      but given there quantity and interrelation they were more suitable to a
      module, and thus placed here.


== 0.3.1

    * Aliased #autoload_classes with #autorequire.
    * Added #strfbits and #strfbytes to binary_multiplers.rb.


== 0.2.0  Succ

    * A number of new methods added.
    * Renamed it Succ for "successor". (2003-05-31)
    * Initial public release


== 0.1.0  Carats

    * Early Development as Ruby Carats


== 0.0.0  TomsLib

    * Tomslib's just a few useful methods. (2002-07-01)

